# THIS FILE HAS BEEN AUTO-GENERATED BY "PRISMA DEPLOY"
# DO NOT EDIT THIS FILE DIRECTLY

#
# Model Types
#

type Clip implements Node {
  id: ID!
  createdAt: DateTime!
  author(where: UserWhereInput): User!
  url: String!
  length: Int!
}

type Table implements Node {
  id: ID!
  createdAt: DateTime!
  participants(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  seatCount: Int!
  clips(where: ClipWhereInput, orderBy: ClipOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Clip!]
  topic: String!
}

type User implements Node {
  id: ID!
  createdAt: DateTime!
  email: String
  name: String!
  auth0Id: String!
  tables(where: TableWhereInput, orderBy: TableOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Table!]
}


#
# Other Types
#

type AggregateClip {
  count: Int!
}

type AggregateTable {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

"""
A connection to a list of items.
"""
type ClipConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [ClipEdge]!
  aggregate: AggregateClip!
}

input ClipCreateInput {
  url: String!
  length: Int!
  author: UserCreateOneInput!
}

input ClipCreateManyInput {
  create: [ClipCreateInput!]
  connect: [ClipWhereUniqueInput!]
}

"""
An edge in a connection.
"""
type ClipEdge {
  """
  The item at the end of the edge.
  """
  node: Clip!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum ClipOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  url_ASC
  url_DESC
  length_ASC
  length_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ClipPreviousValues {
  id: ID!
  createdAt: DateTime!
  url: String!
  length: Int!
}

type ClipSubscriptionPayload {
  mutation: MutationType!
  node: Clip
  updatedFields: [String!]
  previousValues: ClipPreviousValues
}

input ClipSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ClipSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ClipSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ClipWhereInput
}

input ClipUpdateDataInput {
  url: String
  length: Int
  author: UserUpdateOneInput
}

input ClipUpdateInput {
  url: String
  length: Int
  author: UserUpdateOneInput
}

input ClipUpdateManyInput {
  create: [ClipCreateInput!]
  connect: [ClipWhereUniqueInput!]
  disconnect: [ClipWhereUniqueInput!]
  delete: [ClipWhereUniqueInput!]
  update: [ClipUpdateWithWhereUniqueNestedInput!]
  upsert: [ClipUpsertWithWhereUniqueNestedInput!]
}

input ClipUpdateWithWhereUniqueNestedInput {
  where: ClipWhereUniqueInput!
  data: ClipUpdateDataInput!
}

input ClipUpsertWithWhereUniqueNestedInput {
  where: ClipWhereUniqueInput!
  update: ClipUpdateDataInput!
  create: ClipCreateInput!
}

input ClipWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ClipWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ClipWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  url: String
  """
  All values that are not equal to given value.
  """
  url_not: String
  """
  All values that are contained in given list.
  """
  url_in: [String!]
  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]
  """
  All values less than the given value.
  """
  url_lt: String
  """
  All values less than or equal the given value.
  """
  url_lte: String
  """
  All values greater than the given value.
  """
  url_gt: String
  """
  All values greater than or equal the given value.
  """
  url_gte: String
  """
  All values containing the given string.
  """
  url_contains: String
  """
  All values not containing the given string.
  """
  url_not_contains: String
  """
  All values starting with the given string.
  """
  url_starts_with: String
  """
  All values not starting with the given string.
  """
  url_not_starts_with: String
  """
  All values ending with the given string.
  """
  url_ends_with: String
  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  length: Int
  """
  All values that are not equal to given value.
  """
  length_not: Int
  """
  All values that are contained in given list.
  """
  length_in: [Int!]
  """
  All values that are not contained in given list.
  """
  length_not_in: [Int!]
  """
  All values less than the given value.
  """
  length_lt: Int
  """
  All values less than or equal the given value.
  """
  length_lte: Int
  """
  All values greater than the given value.
  """
  length_gt: Int
  """
  All values greater than or equal the given value.
  """
  length_gte: Int
  author: UserWhereInput
}

input ClipWhereUniqueInput {
  id: ID
}

scalar DateTime

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createClip(data: ClipCreateInput!): Clip!
  createTable(data: TableCreateInput!): Table!
  createUser(data: UserCreateInput!): User!
  updateClip(data: ClipUpdateInput!, where: ClipWhereUniqueInput!): Clip
  updateTable(data: TableUpdateInput!, where: TableWhereUniqueInput!): Table
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteClip(where: ClipWhereUniqueInput!): Clip
  deleteTable(where: TableWhereUniqueInput!): Table
  deleteUser(where: UserWhereUniqueInput!): User
  upsertClip(where: ClipWhereUniqueInput!, create: ClipCreateInput!, update: ClipUpdateInput!): Clip!
  upsertTable(where: TableWhereUniqueInput!, create: TableCreateInput!, update: TableUpdateInput!): Table!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  updateManyClips(data: ClipUpdateInput!, where: ClipWhereInput): BatchPayload!
  updateManyTables(data: TableUpdateInput!, where: TableWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!
  deleteManyClips(where: ClipWhereInput): BatchPayload!
  deleteManyTables(where: TableWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

type Query {
  clips(where: ClipWhereInput, orderBy: ClipOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Clip]!
  tables(where: TableWhereInput, orderBy: TableOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Table]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  clip(where: ClipWhereUniqueInput!): Clip
  table(where: TableWhereUniqueInput!): Table
  user(where: UserWhereUniqueInput!): User
  clipsConnection(where: ClipWhereInput, orderBy: ClipOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ClipConnection!
  tablesConnection(where: TableWhereInput, orderBy: TableOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TableConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  """
  Fetches an object given its ID
  """
  node("""
  The ID of an object
  """
  id: ID!): Node
}

type Subscription {
  clip(where: ClipSubscriptionWhereInput): ClipSubscriptionPayload
  table(where: TableSubscriptionWhereInput): TableSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

"""
A connection to a list of items.
"""
type TableConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [TableEdge]!
  aggregate: AggregateTable!
}

input TableCreateInput {
  seatCount: Int
  topic: String!
  participants: UserCreateManyWithoutTablesInput
  clips: ClipCreateManyInput
}

input TableCreateManyWithoutParticipantsInput {
  create: [TableCreateWithoutParticipantsInput!]
  connect: [TableWhereUniqueInput!]
}

input TableCreateWithoutParticipantsInput {
  seatCount: Int
  topic: String!
  clips: ClipCreateManyInput
}

"""
An edge in a connection.
"""
type TableEdge {
  """
  The item at the end of the edge.
  """
  node: Table!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum TableOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  seatCount_ASC
  seatCount_DESC
  topic_ASC
  topic_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TablePreviousValues {
  id: ID!
  createdAt: DateTime!
  seatCount: Int!
  topic: String!
}

type TableSubscriptionPayload {
  mutation: MutationType!
  node: Table
  updatedFields: [String!]
  previousValues: TablePreviousValues
}

input TableSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [TableSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [TableSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TableWhereInput
}

input TableUpdateInput {
  seatCount: Int
  topic: String
  participants: UserUpdateManyWithoutTablesInput
  clips: ClipUpdateManyInput
}

input TableUpdateManyWithoutParticipantsInput {
  create: [TableCreateWithoutParticipantsInput!]
  connect: [TableWhereUniqueInput!]
  disconnect: [TableWhereUniqueInput!]
  delete: [TableWhereUniqueInput!]
  update: [TableUpdateWithWhereUniqueWithoutParticipantsInput!]
  upsert: [TableUpsertWithWhereUniqueWithoutParticipantsInput!]
}

input TableUpdateWithoutParticipantsDataInput {
  seatCount: Int
  topic: String
  clips: ClipUpdateManyInput
}

input TableUpdateWithWhereUniqueWithoutParticipantsInput {
  where: TableWhereUniqueInput!
  data: TableUpdateWithoutParticipantsDataInput!
}

input TableUpsertWithWhereUniqueWithoutParticipantsInput {
  where: TableWhereUniqueInput!
  update: TableUpdateWithoutParticipantsDataInput!
  create: TableCreateWithoutParticipantsInput!
}

input TableWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [TableWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [TableWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  seatCount: Int
  """
  All values that are not equal to given value.
  """
  seatCount_not: Int
  """
  All values that are contained in given list.
  """
  seatCount_in: [Int!]
  """
  All values that are not contained in given list.
  """
  seatCount_not_in: [Int!]
  """
  All values less than the given value.
  """
  seatCount_lt: Int
  """
  All values less than or equal the given value.
  """
  seatCount_lte: Int
  """
  All values greater than the given value.
  """
  seatCount_gt: Int
  """
  All values greater than or equal the given value.
  """
  seatCount_gte: Int
  topic: String
  """
  All values that are not equal to given value.
  """
  topic_not: String
  """
  All values that are contained in given list.
  """
  topic_in: [String!]
  """
  All values that are not contained in given list.
  """
  topic_not_in: [String!]
  """
  All values less than the given value.
  """
  topic_lt: String
  """
  All values less than or equal the given value.
  """
  topic_lte: String
  """
  All values greater than the given value.
  """
  topic_gt: String
  """
  All values greater than or equal the given value.
  """
  topic_gte: String
  """
  All values containing the given string.
  """
  topic_contains: String
  """
  All values not containing the given string.
  """
  topic_not_contains: String
  """
  All values starting with the given string.
  """
  topic_starts_with: String
  """
  All values not starting with the given string.
  """
  topic_not_starts_with: String
  """
  All values ending with the given string.
  """
  topic_ends_with: String
  """
  All values not ending with the given string.
  """
  topic_not_ends_with: String
  participants_every: UserWhereInput
  participants_some: UserWhereInput
  participants_none: UserWhereInput
  clips_every: ClipWhereInput
  clips_some: ClipWhereInput
  clips_none: ClipWhereInput
}

input TableWhereUniqueInput {
  id: ID
}

"""
A connection to a list of items.
"""
type UserConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  email: String
  name: String!
  auth0Id: String!
  tables: TableCreateManyWithoutParticipantsInput
}

input UserCreateManyWithoutTablesInput {
  create: [UserCreateWithoutTablesInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutTablesInput {
  email: String
  name: String!
  auth0Id: String!
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  name_ASC
  name_DESC
  auth0Id_ASC
  auth0Id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  id: ID!
  createdAt: DateTime!
  email: String
  name: String!
  auth0Id: String!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateDataInput {
  email: String
  name: String
  auth0Id: String
  tables: TableUpdateManyWithoutParticipantsInput
}

input UserUpdateInput {
  email: String
  name: String
  auth0Id: String
  tables: TableUpdateManyWithoutParticipantsInput
}

input UserUpdateManyWithoutTablesInput {
  create: [UserCreateWithoutTablesInput!]
  connect: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutTablesInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutTablesInput!]
}

input UserUpdateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpdateWithoutTablesDataInput {
  email: String
  name: String
  auth0Id: String
}

input UserUpdateWithWhereUniqueWithoutTablesInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutTablesDataInput!
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithWhereUniqueWithoutTablesInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutTablesDataInput!
  create: UserCreateWithoutTablesInput!
}

input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  email: String
  """
  All values that are not equal to given value.
  """
  email_not: String
  """
  All values that are contained in given list.
  """
  email_in: [String!]
  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]
  """
  All values less than the given value.
  """
  email_lt: String
  """
  All values less than or equal the given value.
  """
  email_lte: String
  """
  All values greater than the given value.
  """
  email_gt: String
  """
  All values greater than or equal the given value.
  """
  email_gte: String
  """
  All values containing the given string.
  """
  email_contains: String
  """
  All values not containing the given string.
  """
  email_not_contains: String
  """
  All values starting with the given string.
  """
  email_starts_with: String
  """
  All values not starting with the given string.
  """
  email_not_starts_with: String
  """
  All values ending with the given string.
  """
  email_ends_with: String
  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  auth0Id: String
  """
  All values that are not equal to given value.
  """
  auth0Id_not: String
  """
  All values that are contained in given list.
  """
  auth0Id_in: [String!]
  """
  All values that are not contained in given list.
  """
  auth0Id_not_in: [String!]
  """
  All values less than the given value.
  """
  auth0Id_lt: String
  """
  All values less than or equal the given value.
  """
  auth0Id_lte: String
  """
  All values greater than the given value.
  """
  auth0Id_gt: String
  """
  All values greater than or equal the given value.
  """
  auth0Id_gte: String
  """
  All values containing the given string.
  """
  auth0Id_contains: String
  """
  All values not containing the given string.
  """
  auth0Id_not_contains: String
  """
  All values starting with the given string.
  """
  auth0Id_starts_with: String
  """
  All values not starting with the given string.
  """
  auth0Id_not_starts_with: String
  """
  All values ending with the given string.
  """
  auth0Id_ends_with: String
  """
  All values not ending with the given string.
  """
  auth0Id_not_ends_with: String
  tables_every: TableWhereInput
  tables_some: TableWhereInput
  tables_none: TableWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
  auth0Id: String
}
